import SimplicialComplex as sc
import json
import timeit
import tqdm

m=14
n=10


# raw_results_path = 'results_Hyuntae/PLS_10_6'

def read_file(filename):
    with open(filename, 'rb') as f:
        data = f.readlines()
    data = [x.strip() for x in data]
    return data


def text(result,path):
    t = open(path, mode='a', encoding='utf-8')
    for K in result:
        t.write(str(K) + '\n')
    t.close()
number_of_m = [0]*(m+1)
for k in range(3):
    raw_results_path = 'raw_results/GPU_%d_%d_%d.out' % (n,m,k)
    results = [json.loads(facets_bytes) for facets_bytes in read_file(raw_results_path)]
    for facets in tqdm.tqdm(results):
        K =sc.PureSimplicialComplex(facets)
        number_of_m[K.m]+=1
print(list(range(m+1)))
print(number_of_m)